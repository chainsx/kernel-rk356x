// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2020 Rockchip Electronics Co., Ltd.
 *
 */

#include "rk3568-firefly-port.dtsi"
#include "dt-bindings/usb/pd.h"

/ {
    vcc5v0_host: vcc5v0-host-regulator {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&vcc5v0_host_en>;
		regulator-name = "vcc5v0_host";
		regulator-always-on;
	};

    vcc_hub_reset: vcc-hub-reset-regulator {
        compatible = "regulator-fixed";
        enable-active-high;
        gpio = <&gpio1 RK_PA4 GPIO_ACTIVE_HIGH>;
        pinctrl-names = "default";
        pinctrl-0 = <&vcc_hub_reset_en>;
        regulator-name = "vcc_hub_reset_en";
        regulator-always-on;
    };

    pcie_pi6c_oe: pcie-pi6c-oe-regulator {
        compatible = "regulator-fixed";
        //enable-active-high;
        gpio = <&gpio3 RK_PA7 GPIO_ACTIVE_LOW>;
        pinctrl-names = "default";
        pinctrl-0 = <&pcie_pi6c_oe_en>;
        regulator-name = "pcie_pi6c_oe_en";
        regulator-always-on;
    };

    vcc_4g_power: vcc-4g-power-regulator {
        compatible = "regulator-fixed";
        enable-active-high;
        gpio = <&gpio3 RK_PA3 GPIO_ACTIVE_HIGH>;
        pinctrl-names = "default";
        pinctrl-0 = <&vcc_4g_power_en>;
        regulator-name = "vcc_4g_power_en";
        regulator-always-on;
    };

    firefly_leds: leds {
        status = "okay";
        compatible = "gpio-leds";
        pinctrl-names = "default";
        pinctrl-0 =<&leds_gpio>;

        power_led: power {
            label = "firefly:blue:power";
            linux,default-trigger = "ir-power-click";
            default-state = "on";
            gpios = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
        };

        user_led: user {
            label = "firefly:yellow:user";
            linux,default-trigger = "ir-user-click";
            default-state = "off";
            gpios = <&gpio1 RK_PB1 GPIO_ACTIVE_HIGH>;
        };

        diy1_led: diy1 {
            label = "firefly:green:diy";
            linux,default-trigger = "ir-user-click";
            default-state = "off";
            gpios = <&gpio1 RK_PB0 GPIO_ACTIVE_HIGH>;
        };

        diy2_led: diy2 {
            label = "firefly:yellow:diy";
            linux,default-trigger = "ir-user-click";
            default-state = "off";
            gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
        };
    };

};

/delete-node/ &vcc3v3_vga;

&i2c0 {
    status = "okay";

	usbc0: fusb302@22 {
			compatible = "fcs,fusb302";
			reg = <0x22>;
			interrupt-parent = <&gpio0>; /*修改 */
			//根据 FUSB302 INT 实际连接的 GPIO 进行
			// interrupts = <&gpio0 RK_PC1 IRQ_TYPE_LEVEL_LOW>;
			fcs,int_n = <&gpio0 RK_PC1 IRQ_TYPE_LEVEL_LOW>;
			fusb340-switch-gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&usbc0_int>;
			vbus-supply = <&vcc5v0_otg>;
			// vbus-supply = <&vbus_typec>;
			status = "okay";
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				/*用于关联 USB 控制器,实现 USB 角色切换的功能 */
				port@0 {
					reg = <0>;
					usbc0_role_sw: endpoint@0 {
					remote-endpoint = <&dwc3_role_switch>;
					};
				};
			};
			usb_con: connector { /*用于描述 PD 协议相关信息 */
				compatible = "usb-c-connector";
				label = "USB-C";
				data-role = "dual";
				power-role = "dual";
				try-power-role = "sink";
				op-sink-microwatt = <1000000>;
				sink-pdos =
					<PDO_FIXED(5000, 2500, PDO_FIXED_USB_COMM)>;
				source-pdos =
					<PDO_FIXED(5000, 1500, PDO_FIXED_USB_COMM)>;
			};
		};
};

&usb2phy0 {
    status = "okay";
};

&u2phy0_otg {
    /delete-property/ vbus-supply;
    status = "okay";
};

&usbdrd30 {
	status = "okay";
};

&usbdrd_dwc3 {
	status = "okay";
	usb-role-switch; /*用于使能 DWC3 驱动注册 USB Role Switch 回调函数 */
	port {
		#address-cells = <1>;
		#size-cells = <0>;
		dwc3_role_switch: endpoint@0 {
			reg = <0>;
			/*关联 FUSB302 ,实现USB角色切换的功能 */
			remote-endpoint = <&usbc0_role_sw>; 
		};
	};
};

&i2c1 {
    status = "okay";
};

&i2c5 {
    status = "okay";
};

&hym8563 {
    status = "okay";
};

&mc3230 {
    status = "okay";
};

&uart3 {
    status = "okay";
    pinctrl-0 = <&uart3m1_xfer>;
};

&uart4 {
    status = "okay";
    pinctrl-0 = <&uart4m1_xfer>;
};

&uart7 {
    status = "okay";
    pinctrl-0 = <&uart7m1_xfer>;
};

&uart8 {
    status = "okay";
};

&uart9 {
    status = "okay";
    pinctrl-0 = <&uart9m1_xfer>;
};

&spi1 {
    status = "disabled";
}; 
   
&spi_wk2xxx {
    status = "disabled";
};

&can1{
       status = "okay";
};

&pcie30phy {
    status = "okay";
};

&pcie3x2 {
    reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
    vpcie3v3-supply = <&pcie30_3v3>;
    status = "okay";
};

&its {
    status = "okay";
};

&vcc3v3_lcd1_n {
    status = "disabled";
};

&gmac0 {
    status = "okay";
    tx_delay = <0x4a>;
    rx_delay = <0x2e>;
    // wolirq-gpio = <&gpio0 RK_PC4 GPIO_ACTIVE_LOW>;
};

&gmac1 {
    status = "okay";
    tx_delay = <0x3e>;
    rx_delay = <0x32>;
    // wolirq-gpio = <&gpio0 RK_PC5 GPIO_ACTIVE_LOW>;
};

&rgmii_phy0 {
    led_status_value = <0x6940>;
}; 
   
&rgmii_phy1 {
    led_status_value = <0x6940>;
}; 


&sdio_pwrseq {
    status = "okay";
    reset-gpios = <&gpio3 RK_PD5 GPIO_ACTIVE_LOW>;
    post-power-on-delay-ms = <100>;
};

/* used for wifi */
&sdmmc2 {
    status = "okay";
};

&wireless_wlan {
    wifi_chip_type = "ap6256";
    status = "okay";
};

&wireless_bluetooth {
    status = "okay";
    BT,wake_gpio     = <&gpio3 RK_PA2 GPIO_ACTIVE_HIGH>;
    BT,wake_host_irq = <&gpio3 RK_PA1 GPIO_ACTIVE_HIGH>;
};

&spdif_8ch{
    status = "disabled";
};

&rk809_codec {
    //hp-det = <&gpio3 RK_PC2 GPIO_ACTIVE_LOW>;
    io-channels = <&saradc 7>;
    hp-det-adc-value = <1000>;
    hp-adc-drift-scope = <100>;
    hp-volume = <3>;
    spk-volume = <3>;
    /delete-property/ spk-ctl-gpios;
};

&rk809 {
    rtc {
        status = "disabled";
    };
};

&pwm7 {
    status = "okay";
};

&sata2 {
    status = "okay";
};

&dfi {
    status = "okay";
};

&dmc {
    status = "okay";
};

&pinctrl {
    usb {
        vcc5v0_host_en: vcc5v0-host-en {
			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
		};

        vcc_hub_reset_en: vcc-hub-reset-en {
            rockchip,pins = <1 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
        };
    };

    pcie {
        pcie_pi6c_oe_en: pcie-pi6c-oe-en {
            rockchip,pins = <3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_none>;
        };
    };

    leds {
        leds_gpio: leds-gpio {
            rockchip,pins =
            /* led_power */
            <1 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>,
            /* led_user */
            <1 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>,
            /* led diy1 */
            <1 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>,
            /* led diy2 */
            <2 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
        };
    };

    4g {
        vcc_4g_power_en: vcc-4g-power-en {
            rockchip,pins = <3 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
        };
    };

	usb-typec {
		usbc0_int: usbc0-int { /*配置 FUSB302 驱动的中断 gpio pinctrl */
			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_up>;
		};
		vcc5v0_typec0_en: vcc5v0-typec0-en { /*配置 FUSB302 驱动的 VBUSgpio pinctrl */
			rockchip,pins =<0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
};
